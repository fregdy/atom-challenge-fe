/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { AccessToken } from '../models/access-token';
import { userControllerLogIn } from '../fn/user/user-controller-log-in';
import { UserControllerLogIn$Params } from '../fn/user/user-controller-log-in';
import { userControllerSignUp } from '../fn/user/user-controller-sign-up';
import { UserControllerSignUp$Params } from '../fn/user/user-controller-sign-up';

@Injectable({ providedIn: 'root' })
export class UserService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `userControllerLogIn()` */
  static readonly UserControllerLogInPath = '/user/login';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `userControllerLogIn()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  userControllerLogIn$Response(params: UserControllerLogIn$Params, context?: HttpContext): Observable<StrictHttpResponse<AccessToken>> {
    return userControllerLogIn(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `userControllerLogIn$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  userControllerLogIn(params: UserControllerLogIn$Params, context?: HttpContext): Observable<AccessToken> {
    return this.userControllerLogIn$Response(params, context).pipe(
      map((r: StrictHttpResponse<AccessToken>): AccessToken => r.body)
    );
  }

  /** Path part for operation `userControllerSignUp()` */
  static readonly UserControllerSignUpPath = '/user/signup';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `userControllerSignUp()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  userControllerSignUp$Response(params: UserControllerSignUp$Params, context?: HttpContext): Observable<StrictHttpResponse<AccessToken>> {
    return userControllerSignUp(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `userControllerSignUp$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  userControllerSignUp(params: UserControllerSignUp$Params, context?: HttpContext): Observable<AccessToken> {
    return this.userControllerSignUp$Response(params, context).pipe(
      map((r: StrictHttpResponse<AccessToken>): AccessToken => r.body)
    );
  }

}
